server:
  port: 8082

spring:
  thymeleaf:
    cache: false

  security:
    oauth2:
      client:
        registration:
          demo:
            client-id: app-demo
            client-name: Demo App
            client-secret: df6b3323-d2d4-4cad-80fd-5b3892b62b76
            provider: keycloak
            authorization-grant-type: authorization_code
            scope: openid, profile
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
        provider:
          keycloak:
            authorization-uri: ${application.oAuth2-client.realm-url}/protocol/openid-connect/auth
            jwk-set-uri: ${application.oAuth2-client.realm-url}/protocol/openid-connect/certs
            token-uri: ${application.oAuth2-client.realm-url}/protocol/openid-connect/token
            #  User info endpoint not needed since Keycloak uses self-contained value tokens
            #  user-info-uri: ${application.oAuth2-client.realm-url}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username

application:
  oAuth2-client:
    base-url: http://localhost:9080/auth
    realm: demo
    realm-url: ${application.oAuth2-client.base-url}/realms/${application.oAuth2-client.realm}
